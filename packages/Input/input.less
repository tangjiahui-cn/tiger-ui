@import '../_theme/variable.less';

@prefix: prefix('input');
@prefixWrap: ~'@{prefix}-wrap';
@borderClass: ~'@{prefixWrap}-border';

@{prefix} {
  .size();
  .common();
  border: none;
  display: inline-block;

  &::placeholder {
    color: @placeholderColor;
  }

  &:focus {
    outline: none;
  }

  &:disabled {
    .disabled();
  }

  &-pure {
    transition: all @duration;
    border: 1px solid @borderColor;
    &:focus {
      border: 1px solid @primary;
    }
  }
}

@{prefixWrap} {
  .common();
  position: relative;
  display: inline-flex;
  transition: all @duration;
  align-items: center;

  & > @{borderClass} {
    position: absolute;
    top: -1px;
    left: -1px;
    width: 100%;
    height: 100%;
    border: 1px solid @borderColor;
    pointer-events: none;
    transition: border-color @duration;
  }

  & > input:focus ~ @{borderClass} {
    border: 1px solid @primary;
  }

  & input {
    flex: 1px;
    border: none;
  }

  &-disabled {
    .disabled();
  }

  &-prefix {
    .textEllipsis();
    margin-left: 12px;
  }

  &-suffix {
    .textEllipsis();
    margin-right: 12px;
  }
}

.disabled () {
  color: @colorDisabled;
  background-color: @colorBgDisabled;
  cursor: not-allowed;
}

.textEllipsis () {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.common () {
  width: 100%;
  color: @color;
  line-height: 1.125;
  font-size: @fontSize;
  box-sizing: border-box;
  vertical-align: middle;
  background-color: white;
}

.size () {
  &-large {
    padding: 12px;
    font-size: @fontSizeLarge;
  }

  &-middle {
    padding: 8px 12px;
  }

  &-small {
    padding: 4px 12px;
  }
}
