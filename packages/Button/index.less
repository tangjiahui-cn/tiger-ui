@import '../_style/theme';

// mixin
.hover (@code) {
  &:hover,
  &.btn-force-focus,
  &:focus.btn-stay-focus:not(:active) {
    @code();
  }
}

.btn-hover-primary () {
  .hover({
    background-color: @primaryHover;
    border-color: @primaryHover;
    .setLoading(white, pointer);
  });

  &:active {
    background-color: @primaryActive;
    border-color: @primaryActive;
  }

  &:disabled {
    color: @disabled;
    background-color: @disabledBg;
    border-color: @disabled;
    .setLoading(@disabled, not-allowed);
  }
}

.btn-hover-default () {
  .btn-danger-default();
  .setLoading(color, default);

  .hover({
    color: @primaryHover;
    border-color: @primaryHover;
    .setLoading(@primaryHover, pointer);
  });

  &:active {
    color: @primaryActive;
    border-color: @primaryActive;
    .setLoading(@primaryActive, pointer);
  }

  &:disabled {
    color: @disabled;
    border-color: @disabled;
    .setLoading(@disabled, not-allowed);
  }
}

.btn-hover-text () {
  .setLoading(@color, default);

  .hover({
    color: @textHover;
    .setLoading(@textHover, pointer);
  });

  &:active {
    color: @textActive;
    .setLoading(@textActive, pointer);
  }

  &:disabled {
    color: @disabled;
    border-color: transparent;
    .setLoading(@disabled, not-allowed);
  }
}

.btn-danger-primary () {
  &.btn-danger {
    background-color: @danger;
    border-color: @danger;

    .hover({
      background-color: @dangerHover;
      border-color: @dangerHover;
    });

    &:active {
      background-color: @dangerActive;
      border-color: @dangerActive;
    }

    &:disabled {
      color: white;
      background-color: @dangerDisabled;
      border-color: @dangerDisabled;
      .setLoading(white, not-allowed);
    }
  }
}

.btn-danger-default () {
  &.btn-danger {
    color: @danger;
    border-color: @danger;
    .setLoading(@danger, default);

    .hover({
      color: @dangerHover;
      border-color: @dangerHover;
      .setLoading(@dangerHover, pointer);
    });

    &:active {
      color: @dangerActive;
      border-color: @dangerActive;
      .setLoading(@dangerActive, pointer);
    }

    &:disabled {
      color: @dangerDisabled;
      border-color: @dangerDisabled;
      .setLoading(@dangerDisabled, not-allowed);
    }
  }
}

.btn-danger-text () {
  &.btn-danger {
    color: @danger;
    .setLoading(@danger, default);

    .hover({
      color: @dangerHover;
      .setLoading(@dangerHover, pointer);
    });

    &:active {
      color: @dangerActive;
      .setLoading(@dangerActive, pointer);
    }

    &:disabled {
      color: @dangerDisabled;
      background: transparent;
      border-color: transparent;
      .setLoading(@dangerDisabled, not-allowed);
    }
  }
}

.btn {
  font-size: @fontSize;
  cursor: pointer;
  user-select: none;
  color: @color;
  background: white;
  border: 1px solid @borderColor;
  transition: all @duration;
  line-height: 1.125;
  vertical-align: middle;

  &:focus {
    outline-color: @primary;
  }

  &:disabled {
    cursor: not-allowed;
  }

  &-loading {
    margin-right: 8px;
  }

  &-default {
    .btn-hover-default();
  }

  &-primary {
    color: white;
    background: @primary;
    border-color: @primary;
    .setLoading(white, default);
    .btn-danger-primary();
    .btn-hover-primary();
  }

  &-dashed {
    color: @color;
    border-style: dashed;
    .btn-hover-default();
  }

  &-dotted {
    color: @color;
    border-style: dotted;
    .btn-hover-default();
  }

  &-text {
    background: white;
    border-color: transparent;
    .btn-danger-text();
    .btn-hover-text();
  }

  &-block {
    width: 100%;
    display: block;
  }

  &-large {
    padding: @paddingLarge;
    font-size: @fontSizeLarge;
  }

  &-middle {
    padding: @padding;
  }

  &-small {
    padding: @paddingSmall;
  }
}
