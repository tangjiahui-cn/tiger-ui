// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import React, { useState, useEffect, useRef } from 'react';
import { useOutlet, history } from 'dumi';
import { SiteContext } from '/Users/tangjiahui/Desktop/tjh/tiger-ui/node_modules/.pnpm/dumi@2.2.12_t6c3fpy3nuj4hbdy7klujng5tu/node_modules/dumi/dist/client/theme-api/context.js';
import { demos, components } from '../meta';
import { locales } from '../locales/config';
import * as entryMemberExports from '/Users/tangjiahui/Desktop/tjh/tiger-ui/packages/index.ts';

const entryExports = {
  ...entryMemberExports,
};

export default function DumiContextWrapper() {
  const outlet = useOutlet();
  const [loading, setLoading] = useState(false);
  const prev = useRef(history.location.pathname);

  useEffect(() => {
    return history.listen((next) => {
      if (next.location.pathname !== prev.current) {
        prev.current = next.location.pathname;

        // scroll to top when route changed
        document.documentElement.scrollTo(0, 0);
      }
    });
  }, []);

  return (
    <SiteContext.Provider
      value={{
        pkg: {
          name: 'tiger-ui',
          description: 'A React components library.',
          version: '0.0.4',
          license: 'MIT',
          repository: { type: 'git', url: 'git+https://github.com/tangjiahui-cn/tiger-ui.git' },
          author: 'tangjiahui-cn',
        },
        historyType: 'browser',
        entryExports,
        demos,
        components,
        locales,
        loading,
        setLoading,
        hostname: undefined,
        themeConfig: {
          title: 'tiger-ui',
          footer: false,
          prefersColor: { default: 'light', switch: false },
          nprogress: true,
          lastUpdated: true,
          logo: false,
          name: 'tiger-ui',
          apiHeader: false,
          editLink: 'https://github.com/tangjiahui-cn/tiger-ui/edit/docs/{filename}',
        },
        _2_level_nav_available: false,
      }}
    >
      {outlet}
    </SiteContext.Provider>
  );
}
